#!/bin/bash
##############################################################################################################
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
##############################################################################################################
# Copyright (c) 2012, Nold, https://nold.in
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# - Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
###############################################################################################################
trap cleanup EXIT SIGINT SIGKILL

# Test if cdirip is available in $PATH
if ! type cdirip &> /dev/null ; then echo "Please install cdirip" ;  exit 1 ; fi

# Test if cdrecord or wodim are available in $PATH
if ! type wodim &> /dev/null ; then
    if ! type cdrecord &> /dev/null ; then
        echo "Please install wodim / cdrecord"
        exit 1
    else
        BURNBIN=cdrecord
    fi
else 
    BURNBIN=wodim
fi

OVERBURN=""
DEVICE="/dev/cdrw"
while getopts "fc:" opt; do
    case $opt in
        c)
            DEVICE="$OPTARG"
            ;;
        f)
            OVERBURN="-overburn"
            ;;
        \?)
            echo "Unknown options -$OPTARG."
            exit 1
            ;;
	:)
            echo "-$OPTARG requires argument."
            exit 1
            ;;
    esac
done

CDIIMG="${@:$OPTIND:1}"

function show_help {
    if [ $# -gt 0 ] ; then
        echo "---------------------------------------------------"
        echo $@
        echo "---------------------------------------------------"
    fi
    echo "BurnCDI by milksheik, improved by Nold"
    echo "Usage:"
    echo "       $0 [-f] [-c <CDRW-DRIVE>] <CDI-File>"
    echo
    echo "       -f | Force burning of Image & enable overburning"
    echo "       -c | Path to CD writer if not /dev/cdrw"
    exit 1
}

function cleanup {
    if [ ! -z "$EXT_DIR" ] && [ -d "$EXT_DIR" ] ; then
        rm -rf --one-file-system "${EXT_DIR}"
    fi
}

if [ $# -lt 1 ] ; then
        show_help
fi

if [ ! -f "$CDIIMG" ] ; then
        show_help "ERROR: Couldn't open CDI-File: $CDIIMG"
fi

if [ ! -e "$DEVICE" ] ; then
        show_help "ERROR: Couldn't open CD-R: $DEVICE"
fi

EXT_DIR="ext_$(basename $CDIIMG)"
if [ -e $EXT_DIR ] ; then
    echo "ERROR: Couldn't unpack to '$EXT_DIR' - File exists"
    exit 2
fi

mkdir ${EXT_DIR}
if [ -d ${EXT_DIR} ] ; then 
    cdirip "${CDIIMG}" "${EXT_DIR}" -cdrecord || \
    show_help "ERROR: ${EXT_DIR} dosn't exist!"
fi

if [ $(du -s ${EXT_DIR} 2> /dev/null | awk '{print $1}') -ge 700000 -a "$OVERBURN" == "" ] ; then
    echo "---------------------------------------------------"
    echo "CRITICAL_ERROR: Extracted files are too big, to fit on a CD-R..."
    echo "If you want to force the burn process, try -f"
    echo "Aborting..."
    echo "---------------------------------------------------"
    cleanup
    exit 3
elif [ "$OVERBURN" != "" ] ; then
    echo "NOTICE: Skipping Filesize Check..."
fi

echo
echo "---------------------------------------------------"
echo "Starting burning process using $BURNBIN"

COUNTER=0
RET=99
MORE=true
while $MORE ; do
    COUNTER=$(($COUNTER + 1))
    NUMBER=$(printf %02u $COUNTER)
    ISOFILE=${EXT_DIR}/tdata${NUMBER}.iso
    WAVFILE=${EXT_DIR}/taudio${NUMBER}.wav

    echo "---------------------------------------------------"
    if [ -f $WAVFILE ]; then
        echo "Burning Part $NUMBER: '$WAVFILE'"
        $BURNBIN dev=${DEVICE} speed=4 ${OVERBURN} -tao -multi -audio $WAVFILE
    elif [ -f $ISOFILE ]; then
        echo "Burning Part  $NUMBER: '$ISOFILE'"
        $BURNBIN dev=${DEVICE} speed=4 ${OVERBURN} -tao -multi -xa $ISOFILE
        RET=$?
    else
        MORE=false
    fi
done

echo
echo "---------------------------------------------------"
echo "Burning process... Done"
echo -n "Cleaning up... "
cleanup
echo "Done"

echo -n "Ejecting Disk... "
eject $DEVICE &>/dev/null
echo "Done"

if [ $RET -eq 0 ] ; then
    echo "---------------------------------------------------"
    echo "Everything looks fine... Good Game!"
    echo "---------------------------------------------------"
else
    echo "---------------------------------------------------"
    echo "An error accured! Check $BURNBIN output"
    echo "---------------------------------------------------"
    echo
fi
exit $RET
